/*
 * Copyright (c) 2021 weteor
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NUMBER 1
#define SYMBOL 2
#define ARROW 3
#define TMUX 4


// repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";
        combo_del {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp BSPC>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp TAB>;
        };
        
         combo_alt {
            timeout-ms = <50>;
            key-positions = <25 26>;
            bindings = <&kp LGUI>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <180>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
    
// COMBOS
// vertical
// -------------------------------     -------------------------------
// |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U  |  I  |  O  |  P  | 
// |  /  |  [  |  {  |  (  |  =  |     |  *  |  )  |  }  |  ]  |  \  |  
// |  A  |  S  |  D  |  F  |  G  |     |  H  |  J  |  K  |  L  |  '  | 
//
// others:
// Q + W - escape
// W + E - tab
// I + O - backspace
// C + , - word caps
// both inner thumbs -> Layer CFG
// both left thumbs  -> Layer BLE

    keymap {
                compatible = "zmk,keymap";
                
       		base_layer {
		bindings = <
		&kp Q &kp W &kp E &kp R &kp T 						        &kp Y &kp U  &kp I    &kp O   &kp P 
                &kp A &lt TMUX S &lt NUMBER D &lt ARROW F &kp G 	        	        &kp H &kp J &kp K &kp L &kp SEMICOLON
		&mt LSFT Z &kp X &kp C &kp V &kp B				                &kp N &kp M  &kp CMMA &kp DOT &mt LSFT SLASH
          			&mt LALT ESC &lt SYMBOL SPACE   			 &lt SYMBOL ENTER  &mt LCTRL BSPC 
		>;
		};

       		number_layer {
		bindings = <
              &trans    &trans    &trans    &trans    &trans                         &trans    &kp N7 &kp N8 &kp N9    &trans     
              &trans    &trans    &trans    &trans    &trans                         &trans    &kp N4 &kp N5 &kp N6    &trans 
              &trans    &trans    &trans    &trans    &trans                         &trans    &kp N1 &kp N2 &kp N3    &trans
                                            &trans    &trans                         &trans    &kp N0 
		>;
		};
		
		symbol_layer {
		bindings = <
              &kp EXCL &kp AT    &kp HASH &kp DOLLAR &kp PERCENT                &kp CARET &kp AMPERSAND &kp ASTERISK  &kp PIPE &kp BACKSLASH
              &kp TILDE    &kp GRAVE    &kp KP_PLUS    &kp UNDER    &trans              &kp LPAR    &kp LBKT    &kp LBRC    &kp SQT    &kp DQT  
              &kp EQUAL    &kp KP_PLUS    &kp KP_MINUS    &trans    &trans            &kp RPAR    &kp RBKT    &kp RBRC    &kp UNDER    &kp KP_MINUS  
                                               &bt BT_CLR   &kp TILDE            &kp UNDER    &kp KP_PLUS  
		>;
		};	
		
		arrow_layer {
		bindings = <
              &trans    &trans    &trans    &trans    &trans                         &bt BT_CLR    &bt BT_SEL 0    &bt BT_SEL 1    &trans    &trans     
              &trans    &trans    &kp LGUI    &trans    &trans                         &trans    &kp LEFT  &kp DOWN    &kp UP  &kp RIGHT  
              &trans    &trans    &trans    &trans    &trans                        &trans    &trans    &trans    &trans    &trans
                                  &trans    &trans                                  &trans    &trans  
		>;
		};	

		tmux_layer {
		bindings = <
              &trans    &trans    &trans    &trans    &trans                         &trans    &trans    &kp LA(I)    &trans    &trans     
              &trans    &trans    &trans    &trans    &trans                         &trans    &kp LC(H) &kp LC(J)    &kp LC(K)    &kp LC(L)
              &trans    &trans    &trans    &trans    &trans                         &trans    &trans    &kp LA(COMMA)    &trans    &trans 
                                   &trans     &trans                                  &trans    &trans  
		>;
		};	
    };
};
